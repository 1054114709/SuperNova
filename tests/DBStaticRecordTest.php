<?php

class DBStaticRecordPublisher extends DBStaticRecord {
  public static function fieldsToString($fieldList) {
    return parent::fieldsToString($fieldList);
  }

  public static function getRecordList($where = '', $fieldList = array(), $for_update = false, $returnFirst = false) {
    return parent::getRecordList($where, $fieldList, $for_update, $returnFirst); // TODO: Change the autogenerated stub
  }

  public static function getRecord($where = '', $fieldList = array(), $for_update = false) {
    return parent::getRecord($where, $fieldList, $for_update); // TODO: Change the autogenerated stub
  }

}

/**
 * Class DBStaticRecordTest
 *
 * @coversDefaultClass DBStaticRecord
 */
class DBStaticRecordTest extends PHPUnit_Framework_TestCase {

  /**
   * @var DBStaticRecordPublisher
   */
  protected $DBStaticRecordPublisher;

  /**
   * @var PHPUnit_Framework_MockObject_MockObject $dbStub
   */
  protected $dbStub;

  public function setUp() {
    parent::setUp();
    $this->DBStaticRecordPublisher = new DBStaticRecordPublisher();

//    // Create a stub for the SomeClass class.
//    $this->dbStub = $this->getMockBuilder('db_mysql')
//      ->getMock();
  }

  /**
   * @covers ::fieldsToString
   */
  public function testFieldsToString() {
    // Only string would be converted to array
    $this->assertEquals('*', $this->DBStaticRecordPublisher->fieldsToString(array()));

    $this->assertEquals('1,NULL,`test`', $this->DBStaticRecordPublisher->fieldsToString(array(1, null, 'test')));
  }

  /**
   * @covers ::fieldsToString
   * @expectedException ExceptionDBFieldEmpty
   */
  public function testFieldsToStringException() {
    $this->assertTrue('*', $this->DBStaticRecordPublisher->fieldsToString(''));

  }

  /**
   * Cover disabled until real test
   * covers ::getRecordList
   */
  public function testGetRecordList() {
    // Configure the stub.
//    $this->dbStub->method('doquery')
//      ->willReturn('foo');

  }



  public function tearDown() {
    parent::tearDown(); // TODO: Change the autogenerated stub
    unset($this->DBStaticRecordPublisher);
  }

}

<?php

/**
 * Class UBEUnitList
 *
 * Hints for IDE - inherited from ArrayAccessV2
 * @method UBEUnit offsetGet($offset)
 * @property UBEUnit[] $_container
 *
 *
 * Invoked via ArrayAccessV2::__call
 *
 * @method void addBonus(Bonus $bonus)
 * @see UBEUnit::addBonus
 *
 * @method void prepare_for_next_round(bool $is_simulator)
 * @see UBEUnit::prepare_for_next_round
 */
class UBEUnitList extends ArrayAccessV2 {

//  /**
//   * Method list that should support applying to container content
//   *
//   * @var string[]
//   */
//  protected static $_call = array(
//    'fill_unit_info',
//    'prepare_for_next_round',
//  );

//  /**
//   * Contained object property list that supported by property summarizer
//   *
//   * @var string[]
//   */
//  protected static $_sum_property = array(
//    'count',
//    'units_lost',
//  );

  /**
   * @return UBEUnit
   *
   * @version 41a6.0
   */
  public function _createElement() {
    return new UBEUnit();
  }

  public function __clone() {
    parent::__clone(); // TODO: Change the autogenerated stub
  }

  // TODO - читать инфу здесь?
  public function insert_unit($unit_id, $unit_count = 0) {
    if(!isset($this[$unit_id])) {
      $this[$unit_id] = $this->_createElement();
      $this[$unit_id]->setUnitId($unit_id);
      $this[$unit_id]->setUnitCount($unit_count);
    }
  }

  public function countUnits() {
    return $this->getSumProperty('count');
  }

  public function countUnitsLost() {
    return $this->getSumProperty('units_lost');
  }

  /**
   * @return int
   *
   * @version 2016-02-25 23:42:45 41a4.68
   */
  public function countReapers() {
    $reapers = 0;

    foreach($this->_container as $UBEUnit) {
      // TODO: Работа по группам - группа "Уничтожители лун"
      if($UBEUnit->unitId == SHIP_HUGE_DEATH_STAR) {
        $reapers += $UBEUnit->count;
      }
    }

    return $reapers;
  }

}
